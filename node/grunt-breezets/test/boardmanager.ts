   import * as breeze from "breeze-client";   import * as extensions from "breezets-lib";   import * as typedefs from "./typedefs";   import * as querybuilder from "./querybuilder";   export class BoardManager   {      private _entityManager: breeze.EntityManager = null;      constructor(serverUrl: string);      constructor(breezeManager: breeze.EntityManager);      constructor(server: string | breeze.EntityManager = null)      {          if (server == null)          {              throw "Cannot use a null or empty URL when connecting to a BoardManager data service";          }          else if (typeof server === "string")          {              this._entityManager = new breeze.EntityManager(server as string);          }          else          {              this._entityManager = server as breeze.EntityManager;          }      }      public hasChanges(): boolean      {          return this._entityManager.hasChanges();      }      public saveChanges(): Promise<breeze.SaveResult>      {          var promise = this._entityManager.saveChanges();          return promise;      }      public get Boards(): extensions.TEntitySet<querybuilder.BoardQuery, typedefs.Board>      {          return new extensions.TEntitySet<querybuilder.BoardQuery, typedefs.Board>(              this._entityManager,               "typedefs.Board",               "Boards",               querybuilder.BoardQuery._Instance,               null,               null);      }      public get BoardSeries(): extensions.TEntitySet<querybuilder.BoardSeriesQuery, typedefs.BoardSeries>      {          return new extensions.TEntitySet<querybuilder.BoardSeriesQuery, typedefs.BoardSeries>(              this._entityManager,               "typedefs.BoardSeries",               "BoardSeries",               querybuilder.BoardSeriesQuery._Instance,               null,               null);      }      public get Scores(): extensions.TEntitySet<querybuilder.BoardScoreQuery, typedefs.BoardScore>      {          return new extensions.TEntitySet<querybuilder.BoardScoreQuery, typedefs.BoardScore>(              this._entityManager,               "typedefs.BoardScore",               "Scores",               querybuilder.BoardScoreQuery._Instance,               null,               null);      }   }