   import extensions = require("breezets-lib");   import typedefs = require("./typedefs");   export class BoardQuery   {      private static _instance: BoardQuery = null;      static get _Instance(): BoardQuery {          if (BoardQuery._instance == null)              BoardQuery._instance = new BoardQuery();          return BoardQuery._instance;      }      public Id: extensions.NumberFieldInfo<BoardQuery, typedefs.Board> = new extensions.NumberFieldInfo<BoardQuery, typedefs.Board>(BoardQuery._instance, "Id");       public Guid: extensions.StringFieldInfo<BoardQuery, typedefs.Board> = new extensions.StringFieldInfo<BoardQuery, typedefs.Board>(BoardQuery._instance, "Guid");       public Code: extensions.StringFieldInfo<BoardQuery, typedefs.Board> = new extensions.StringFieldInfo<BoardQuery, typedefs.Board>(BoardQuery._instance, "Code");       public BoardSeriesId: extensions.NumberFieldInfo<BoardQuery, typedefs.Board> = new extensions.NumberFieldInfo<BoardQuery, typedefs.Board>(BoardQuery._instance, "BoardSeriesId");       public CardDistribution: extensions.StringFieldInfo<BoardQuery, typedefs.Board> = new extensions.StringFieldInfo<BoardQuery, typedefs.Board>(BoardQuery._instance, "CardDistribution");       public BoardSeries: extensions.SingleAssociationFieldInfo<BoardQuery, typedefs.Board, BoardSeriesQuery, typedefs.BoardSeries> = new extensions.SingleAssociationFieldInfo<BoardQuery, typedefs.Board, BoardSeriesQuery, typedefs.BoardSeries>(BoardQuery._Instance, "BoardSeries");      public Scores: extensions.MultiAssociationFieldInfo<BoardQuery, typedefs.Board, BoardScoreQuery, typedefs.BoardScore> = new extensions.MultiAssociationFieldInfo<BoardQuery, typedefs.Board, BoardScoreQuery, typedefs.BoardScore>(BoardQuery._Instance, "Scores", BoardScoreQuery._Instance);   }   export class BoardSeriesQuery   {      private static _instance: BoardSeriesQuery = null;      static get _Instance(): BoardSeriesQuery {          if (BoardSeriesQuery._instance == null)              BoardSeriesQuery._instance = new BoardSeriesQuery();          return BoardSeriesQuery._instance;      }      public Id: extensions.NumberFieldInfo<BoardSeriesQuery, typedefs.BoardSeries> = new extensions.NumberFieldInfo<BoardSeriesQuery, typedefs.BoardSeries>(BoardSeriesQuery._instance, "Id");       public Guid: extensions.StringFieldInfo<BoardSeriesQuery, typedefs.BoardSeries> = new extensions.StringFieldInfo<BoardSeriesQuery, typedefs.BoardSeries>(BoardSeriesQuery._instance, "Guid");       public Code: extensions.StringFieldInfo<BoardSeriesQuery, typedefs.BoardSeries> = new extensions.StringFieldInfo<BoardSeriesQuery, typedefs.BoardSeries>(BoardSeriesQuery._instance, "Code");       public Name: extensions.StringFieldInfo<BoardSeriesQuery, typedefs.BoardSeries> = new extensions.StringFieldInfo<BoardSeriesQuery, typedefs.BoardSeries>(BoardSeriesQuery._instance, "Name");       public Description: extensions.StringFieldInfo<BoardSeriesQuery, typedefs.BoardSeries> = new extensions.StringFieldInfo<BoardSeriesQuery, typedefs.BoardSeries>(BoardSeriesQuery._instance, "Description");       public Boards: extensions.MultiAssociationFieldInfo<BoardSeriesQuery, typedefs.BoardSeries, BoardQuery, typedefs.Board> = new extensions.MultiAssociationFieldInfo<BoardSeriesQuery, typedefs.BoardSeries, BoardQuery, typedefs.Board>(BoardSeriesQuery._Instance, "Boards", BoardQuery._Instance);   }   export class BoardScoreQuery   {      private static _instance: BoardScoreQuery = null;      static get _Instance(): BoardScoreQuery {          if (BoardScoreQuery._instance == null)              BoardScoreQuery._instance = new BoardScoreQuery();          return BoardScoreQuery._instance;      }      public Id: extensions.NumberFieldInfo<BoardScoreQuery, typedefs.BoardScore> = new extensions.NumberFieldInfo<BoardScoreQuery, typedefs.BoardScore>(BoardScoreQuery._instance, "Id");       public BoardId: extensions.NumberFieldInfo<BoardScoreQuery, typedefs.BoardScore> = new extensions.NumberFieldInfo<BoardScoreQuery, typedefs.BoardScore>(BoardScoreQuery._instance, "BoardId");       public Score: extensions.NumberFieldInfo<BoardScoreQuery, typedefs.BoardScore> = new extensions.NumberFieldInfo<BoardScoreQuery, typedefs.BoardScore>(BoardScoreQuery._instance, "Score");       public Count: extensions.NumberFieldInfo<BoardScoreQuery, typedefs.BoardScore> = new extensions.NumberFieldInfo<BoardScoreQuery, typedefs.BoardScore>(BoardScoreQuery._instance, "Count");       public Board: extensions.SingleAssociationFieldInfo<BoardScoreQuery, typedefs.BoardScore, BoardQuery, typedefs.Board> = new extensions.SingleAssociationFieldInfo<BoardScoreQuery, typedefs.BoardScore, BoardQuery, typedefs.Board>(BoardScoreQuery._Instance, "Board");   }